using System;
using System.Collections.Generic;

[Serializable]
public class TutorialClass
{
    public int id;
    public string title;
    public string content;
}

public class TutorialConfig
{
    public static Dictionary<int, TutorialClass> m_Dic;

    static TutorialConfig()
    {
        m_Dic = new Dictionary<int, TutorialClass>()
        {
            {1, new TutorialClass() { id = 1, title = "玩法概览", content = "《xx》是一款回合制卡牌Roguelike游戏。\n以组合卡牌为核心玩法，以击败最终敌人为目标。每一局的体验都具有随机性，且相互独立。每一局玩家会获得固定的初始套牌，但一局内获得的新卡牌和道具等都无法带入下一局。目前版本的流程尚未完善。" } },
            {2, new TutorialClass() { id = 2, title = "战斗流程", content = "《xx》的战斗以回合制进行。\n每回合分为“回合开始阶段”、“出牌阶段”和“回合结束阶段”。\n回合开始阶段，你将会抽一张牌牌（第一回合为四张）并获得一定法力值，同时按照从左往右的顺序结算在场单位的回合开始时效果。\n出牌阶段，你可以消耗法力值使用武器牌（每回合限一次）、饰品牌或手牌。\n点击“结束回合”按钮后，进入回合结束阶段，按照从左往右的顺序结算在场单位的回合结束时效果，结算完后进入下一回合。\n在所有敌人都被击败后，战斗胜利。如果巫真死亡，则游戏结束。" } },
            {3, new TutorialClass() { id = 3, title = "法力值", content = "在战斗中，每回合开始时你都会获得法力值，数值等于当前回合数，最多为5点。\n卡牌的法力值消耗写在卡牌的左上角，出牌需消耗对应的法力值。\n每回合未使用的法力值将会带入下一回合，可同时持有的法力值上限为10点。如果想提前使用强力但消耗更高的卡牌，可以在前几回合采取更保守的出牌策略。" } },
            {4, new TutorialClass() { id = 4, title = "卡牌类型", content = "游戏中共有四种卡牌：武器、饰品、随从和法术。\n武器牌和饰品牌固定于左下角无需抽取，也不算做手牌，但武器牌每回合只能使用一次，饰品牌则会随使用而削弱。\n随从牌与法术牌需要抽取，使用随从牌可将随从放置于己方战场上，随从死后进入墓地；使用法术牌将对特定目标产生效果，使用后进入弃牌堆。" } },
            {5, new TutorialClass() { id = 5, title = "抽牌堆、弃牌堆与墓地", content = "战斗开始时，玩家牌组中的所有随从卡和法术卡都将进入抽牌堆等待抽取。\n抽上来可使用的牌视为手牌。法术牌使用后将进入弃牌堆，如果抽牌堆空了，抽牌时弃牌堆中的牌将在洗牌后放回抽牌堆。\n随从死后会进入墓地，墓地中的牌不会洗牌或到抽牌堆。\n回合结束时，玩家的所有手牌都会保留。玩家的手牌上限为8，任意时间玩家获得的卡牌都从左侧进入手牌，一旦获取超过8张，则最右侧的卡牌将进入弃牌堆。" } },
            {6, new TutorialClass() { id = 6, title = "卡牌与卡牌配件", content = "在战斗或事件中玩家可获得卡牌、单独的卡牌配件，或带有配件的卡牌。\n单独的卡牌即可正常使用，玩家获取卡牌之后，卡牌便进入卡组参与战斗。配件不能独立存在，但可以在非战斗状态下，在牌组浏览界面装配到卡牌上。\n一张卡片最多可以装配三个配件，配件的所有效果将赋予被装配的卡牌，其属性值及其法力消耗也会增加到该卡牌上。\n配件并不强制装配并带入战斗，未装配的配件会储存于牌组中。配件都可以免费装配或卸下，请尽情尝试。" } },
            {7, new TutorialClass() { id = 7, title = "卡牌的属性类型", content = "游戏中共有五种属性类型：剑、魔法、防御、玻璃与活力。\n每张卡片的左下角和右下角分别具有一个属性类型及其属性值，不同的属性类型会影响卡牌的基本行为造成的效果。\n即使在没有主动使用卡牌时，除剑与魔法之外的属性类型均固有一定的效果，如下所示：\n活力：即生命值，当具有活力的单位受到剑或魔法的攻击时，会减少对应的活力。\n玻璃：另一种生命值，当具有玻璃的单位受到剑的攻击时，会减少1点玻璃；受到防御的攻击时，会减少对应的玻璃。\n当一个单位同时拥有活力与玻璃，玻璃将先受到攻击，玻璃为0时活力才会受到攻击。当一个单位的活力与玻璃都不大于0时，该单位死亡。\n防御：当一个单位受到剑的攻击时，会使得自身的活力受到的伤害减少。如果防御高于造成攻击的剑，则自身的活力与玻璃都不会受到伤害。" } },
            {8, new TutorialClass() { id = 8, title = "卡牌的基本行为", content = "卡牌有四种基本行为：攻击、治疗、增益、减益。\n每种行为造成的效果正如其名，但具体会因卡牌具有的属性类型而产生差别。属性类型对应的属性值越高，其影响的基本行为就会越强力。\n剑的攻击将等量削减敌人的活力，或削减敌人的1玻璃，同时会受到防御影响。\n魔法的攻击将等量削减敌人的活力，不受防御影响，但也不能对玻璃造成伤害。\n防御的攻击将等量削减敌人的玻璃，不会受到防御影响，但也不能对活力造成伤害。\n活力、玻璃或防御的治疗会使得目标恢复等量的活力、玻璃或者获得等量的护盾。\n而所有的增益和减益行为，都将依据卡牌自身的属性类型与其属性值，使目标对应的属性类型增加或减少相等的值。" } },
            {9, new TutorialClass() { id = 9, title = "关卡与选择道路", content = "在战斗或特殊事件结束后，玩家将进入选择道路阶段。\n此时将有三个“启示”可供选择，启示会影响下一步遭遇的内容。\n玩家可以选择一个现有的启示，或者两个启示以组合出新的启示，并查看其效果提示。确认选择后，玩家可以在自己选择的结果和系统生成的结果中再选择一次，以决定下一步的内容，包含战斗、商店和各种形式的奖励等。" } },
            {10, new TutorialClass() { id = 10, title = "金币", content = "金币是玩家可通过战斗或事件获得的货币。\n能够在商店或事件中换取卡牌、配件或灵物等资源，帮助玩家在战斗中取得优势。\n金币在游戏结束后并不会带入新一局游戏，无需节约。" } },
            {11, new TutorialClass() { id = 11, title = "灵物", content = "灵物是玩家可通过精英战斗或稀有事件获得的全局加成道具。\n他可以持续提供特殊效果，帮助玩家在战斗中取得优势。\n高稀有度的灵物更难出现也更昂贵，但效果往往更强大。\n有一些灵物在带有正面效果的同时具有副作用，请多加注意。" } },
        };
    }
    public static TutorialClass GetTutorialClassByKey(int key)
    {
        if(m_Dic.ContainsKey(key)) return m_Dic[key];
        return null;
    }
    public static List<TutorialClass> GetAll()
    {
        List<TutorialClass> ret = new List<TutorialClass>();
        foreach (var item in m_Dic) ret.Add(item.Value);
        return ret;
    }
    public static int GetAllNum() { return m_Dic.Count; }
}
